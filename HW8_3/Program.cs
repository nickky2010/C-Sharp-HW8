//Задание 3
//	Описать класс Пациент, содержащий поля для хранения фамилии, диагноза, даты и времени приема, номера кабинета.
//  Описать класс Врач, содержащий следующие поля: фамилия, время приема, номер кабинета.
//  Разработать программу на основе шаблона «наблюдатель» с использованием событий на основе делегата EventHandler, 
//которая выполняет следующие действия:
//  	Создает два объекта класса Врач.
//  	Создает четыре объекта класса Пациент: два лечатся у одного врача, два у другого.Каждый пациент должен быть «зарегистрирован» 
//в «своем» объекте класса Врач.
//  	Выводит информацию о пациентах в виде:
//      Врач Петухов В.В.кабинет №2
//    ╔═══╦═══════╦═══════════╦═════════╗
//    ║ № ║Фамилия║Дата приема║ Диагноз ║
//    ╠═══╬═══════╬═══════════╬═════════╣
//    ║ 1 ║Иванов ║  29.12.09 ║  грипп  ║
//    ║ 2 ║Петров ║  3.08.09  ║пневмония║
//    ╚═══╩═══════╩═══════════╩═════════╝
//      Врач Петренко А.С.кабинет №12  
//    ╔═══╦═══════╦═══════════╦══════════╗
//    ║ № ║Фамилия║Дата приема║  Диагноз ║
//    ╠═══╬═══════╬═══════════╬══════════╣
//    ║ 1 ║Дибров ║  12.03.09 ║  перелом ║
//    ║ 2 ║Семенов║  25.04.09 ║растяжение║
//    ╚═══╩═══════╩═══════════╩══════════╝
//  	При изменении номера кабинета в котором принимает врач (фамилию врача вводить с клавиатуры) 
//  автоматически «оповещает» всех пациентов.
//  	Выводит измененную информацию о пациентах в виде:
//    ╔═══╦═══════╦══════════════╦═══════════╦════════════╦═════════════╦═══════════╗
//    ║ № ║Фамилия║Номер кабинета║Дата приема║Время приема║Фамилия врача║  Диагноз  ║
//    ╠═══╬═══════╬══════════════╬═══════════╬════════════╬═════════════╬═══════════╣
//    ║ 1 ║Иванов ║      15      ║  29.12.09 ║    15:40   ║ Петухов В.В.║   грипп   ║
//    ║ 2 ║Петров ║      15      ║  3.08.09  ║    15:40   ║ Петухов В.В.║ пневмония ║
//    ║ 3 ║Дибров ║      12      ║  12.03.09 ║    21:50   ║Петренко А.С.║  перелом  ║
//    ║ 4 ║Семенов║      12      ║  25.04.09 ║    21:50   ║Петренко А.С.║ растяжение║
//    ╚═══╩═══════╩══════════════╩═══════════╩════════════╩═════════════╩═══════════╝
using HW8_3.Extend;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HW8_3
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
                Patient[] patients = {
                    new Patient("Иванов",Diagnoz.Грипп, "29/12/2009", "15:40:00",15),
                    new Patient("Петров",Diagnoz.Пневмония, "3/8/2009", "15:40:00",15),
                    new Patient("Дибров",Diagnoz.Перелом, "12/3/2009", "21:50:00",12),
                    new Patient("Семенов",Diagnoz.Растяжение, "25/4/2009", "21:50:00",12)
                };
                Doctor[] doctors = {
                    new Doctor("Петухов В.В.", "15:40:00", 15),
                    new Doctor("Петренко А.С.", "21:50:00", 12)
                };
                Table[] table =
                {
                    new TableDoctor("", new Table.Column("№", 3), new Table.Column("Фамилия", 15),
                        new Table.Column("Дата приема"), new Table.Column("Диагноз", 11)),
                    new TableAllDoctor("", new Table.Column("№", 3), new Table.Column("Фамилия", 15),
                        new Table.Column("Номер кабинета"), new Table.Column("Дата приема"), new Table.Column("Время приема"),
                        new Table.Column("Фамилия врача", 15), new Table.Column("Диагноз", 11))
                };
                Reception reception = new Reception();
                foreach (Doctor d in doctors)
                {
                    // подписываем на изменения всех докторов
                    reception.ChangeLocation += d.ChangeCabinetReception;
                    foreach (Patient p in patients)
                    {
                        // подписываем на изменения всех пациентов
                        d.ChangeLocation += p.ChangeCabinet;
                    }
                }
                string[] menuItems = { "Информация о пациентах по докторам", "Изменить номер кабинета врача",
                    "Общая информация о пациентах" };
                Menu menu = new Menu(menuItems, reception, doctors, patients, table);
                menu.Show();
            }
            catch (ArgumentOutOfRangeException ex)
            {
                Console.WriteLine("Ошибка! Задан неправильный формат даты или времени!\n" + ex.Message);
            }
            catch (InvalidCastException ex)
            {
                Console.WriteLine("Ошибка! Задан неправильный формат таблицы!\n" + ex.Message);
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }
    }
}
